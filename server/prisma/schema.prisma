// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String               @id @default(uuid())
  fullName        String
  phoneNumber     BigInt               @unique
  emailAddress    String               @unique
  password        String
  role            String?              @default("user")
  approvedAccount Boolean?             @default(false)
  createdAt       DateTime             @default(now())
  updatedAt       DateTime             @default(now()) @updatedAt
  addedQuestions  Questions[]
  participation   StudentParticipation[]

  @@map("students_table")
}

model Questions {
  id            String   @id @default(uuid())
  topicTitle    String
  topicId       String?
  lecturerName  String
  questionNum   Int
  question      String
  choices       String[]
  correctAnswer String
  adminId       String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @default(now()) @updatedAt
  admin         User     @relation(fields: [adminId], references: [id])
  topic         Topic?   @relation(fields: [topicId], references: [id])

  @@map("added_questions_table")
}

model Topic {
  id         String                @id @default(uuid())
  title      String
  lecturer   String
  createdAt  DateTime              @default(now())
  updatedAt  DateTime              @default(now()) @updatedAt
  questions  Questions[]
  participation   StudentParticipation[]

  @@map("topics_table")
}

model StudentParticipation {
  id              String   @id @default(uuid())
  studentId       String
  topicId         String
  questionsDone   Int
  results         Float
  createdAt       DateTime @default(now())
  updatedAt       DateTime @default(now()) @updatedAt
  student         User     @relation(fields: [studentId], references: [id])
  topic           Topic    @relation(fields: [topicId], references: [id])

  @@map("students_participation_table")
}
